if &compatible
  set nocompatible
end

call plug#begin('~/.vim/plugged')

Plug 'gmarik/Vundle.vim'

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'stsewd/fzf-checkout.vim'

" Code HTML faster
Plug 'rstacruz/sparkup', {'rtp': 'vim/'}

" Comment
Plug 'git@github.com:ddollar/nerdcommenter.git'

" Prettier
Plug 'prettier/vim-prettier', {
  \ 'do': 'yarn install --frozen-lockfile --production',
  \ 'branch': 'release/0.x'
  \ }

Plug 'sbdchd/neoformat'

" Tab in insert mode to be smarter
Plug 'git@github.com:ervandew/supertab.git'

" Auto closer
Plug 'git@github.com:jiangmiao/auto-pairs.git'

" Snippets
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'git@github.com:garbas/vim-snipmate.git'
Plug 'git@github.com:honza/vim-snippets.git'

" Ruby
Plug 'vim-ruby/vim-ruby'

" Rails and Rspec
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'thoughtbot/vim-rspec'
Plug 'janko-m/vim-test'
Plug 'git@github.com:tpope/vim-dispatch.git'

" Javascript
Plug 'pangloss/vim-javascript' 
Plug 'isRuslan/vim-es6'
Plug 'mxw/vim-jsx'

" https://thoughtbot.com/blog/modern-typescript-and-react-development-in-vim
Plug 'leafgarland/typescript-vim'
Plug 'peitalin/vim-jsx-typescript'
Plug 'styled-components/vim-styled-components', { 'branch': 'main' }
Plug 'jparise/vim-graphql'
Plug 'https://github.com/ternjs/tern_for_vim.git'

" Python
Plug 'hdima/python-syntax'

" Visually displaying indent levels
Plug 'nathanaelkane/vim-indent-guides'

" tpope (Good stuff)
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'git@github.com:tpope/vim-unimpaired.git'

" Search
Plug 'mileszs/ack.vim'

" Renaming files
Plug 'git@github.com:vim-scripts/Rename2.git'

" Copy and Past
Plug 'christoomey/vim-system-copy'

" Displays icons for each language and technology
Plug 'ryanoasis/vim-devicons'

" Style
Plug 'git@github.com:chrisbra/Colorizer.git'
Plug 'chriskempson/base16-vim'

" Tmux
Plug 'christoomey/vim-tmux-navigator'

" Use release branch (recommend)
" Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Or build from source code by using yarn: https://yarnpkg.com
" Plug 'neoclide/coc.nvim', {'branch': 'master', 'do': 'yarn install --frozen-lockfile'}


" Initialize plugin system
call plug#end()
