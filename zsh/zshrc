export TERM=xterm-256color

# User configuration
plugins=(git)
stty start undef
stty stop undef

# Path to your oh-my-zsh installation.
export EDITOR='vim'

# ZSH_THEME="wild-cherry"
 ZSH_THEME="refined"

# AUDIO
alias  changeaudio="SwitchAudioSource"

# Macbook Pro
alias anthonyleeio="cd ~/Sites/github.pages/antwonlee.github.io"
alias dotfiles="cd ~/Sites/dotfiles"

# iMac
alias alongside="cd ~/Sites/alongside"
alias fixssh='eval $(ssh-agent) & ssh-add'
alias thriveimac="cd ~/Sites/thriveministry"
alias fixdump='git checkout -- dump.rdb'

# Everday Stuff
alias ag='ag --path-to-ignore ~/.agignore'
alias copymysshkey='pbcopy < ~/.ssh/id_rsa.pub'
alias deletebranch="git branch -d"
alias deleteremotebranch="git push -u origin"
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias ds="cd ~/Sites"
alias gbranch="git --no-pager branch"
alias gc="git commit -m"
alias gcache='git rm -r --cached .'
alias gclean='git remote prune origin'
alias gcommit="git commit"
alias gfix="git commit --amend"
alias gfixignore="git rm -r --cached . && git add ."
alias gitignorevim="git ls-files | grep '\.swp$' | xargs git rm"
alias gprune='git remote prune origin'
alias gpush="git push"
alias gpp="git push production"
alias grebaselast="git rebase -i HEAD~"
alias grename="git branch -m"
alias greset="git reset --hard HEAD~1"
alias gresettoremote="git reset --hard origin/master"
alias gitbranchrm="git push -u origin"
alias gshortcuts='vi ~/.oh-my-zsh/plugins/git/git.plugin.zsh'
alias gwippush="git add . && git commit -m 'WIP' && git push"
alias havingfun="osascript -e 'Set Volume 10' && say -v 'good news' it is time for lunch"
alias list="ls -a"
alias newbranch="git checkout -b"
alias noredbdev='heroku pg:pull DATABASE_URL nonprofitremote_development --app nonprofitremote-production'
alias noredbtest='heroku pg:pull DATABASE_URL nonprofitremote_test --app nonprofitremote-production'
alias repo="hub browse"
alias thrivedbdev='heroku pg:pull DATABASE_URL thriveministry_development --app thriveministry-production'
alias thrivedbtest='heroku pg:pull DATABASE_URL thriveministry_test --app thriveministry-production'
alias thrivehubdbdev='heroku pg:pull DATABASE_URL thriveministry_hub_development --app thriveministry-hub-production'
alias thrivehubdbtest='heroku pg:pull DATABASE_URL thriveministry_hub_test --app thriveministry-hub-production'
alias initialgit="g init && ga . && gc 'initial git'"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias mytheme="vim ~/.oh-my-zsh/themes"
alias pingit="ping google.com"
alias refresh='source ~/.zshrc'
alias searchfile='ack -g'
alias shortcuts='vi ~/.zshrc'
alias settings='vi ~/.zshrc'
alias snippets='cd ~/.vim/bundle/vim-snippets/snippets'
alias sourcezshrc='source ~/.zshrc'
alias sourcevimrc='source ~/.vimrc'
alias starthttp='python3 -m http.server'
alias tellmeyoursecret='cat ~/.ssh/id_rsa.pub'
alias u='..'
alias updateboth='git push && cap production deploy'
alias uohmyzsh='upgrade_oh_my_zsh'
alias vimrc='vi ~/.vimrc'
alias vimrcbundles='vi ~/.vimrc.bundles'
alias whatismynetwork='ipconfig getifaddr en0'
alias whatismyip='curl ipecho.net/plain; echo'
alias youtube="cd ~/Sites/youtube"

# Bash
alias findstring='grep -rnw' 

# csvkit
alias csvcount='csvstat --count'
alias csvshowallcolumns='csvcut -n'
alias csvshowcolumns='csvcut -c'

# Docker
alias dm='docker-machine'
alias dmls='docker-machine ls'
alias dockerpsall='docker ps -a --format=$FORMAT'
alias dockerpsrecent='docker ps -l --format=$FORMAT'
alias dockerrunml4t='docker run -it -v "$(pwd)":/app cs7646'
alias dockerdeletecontainers='docker rm -vf $(docker ps -a -q)'
alias dockerdeleteimages='docker rmi -f $(docker images -a -q)'
alias dockerrestart='dockerdeletecontainers && dockerdeleteimages && make && make up'

# Heroku
alias addherokuremote='heroku git:remote -a'
alias herokuthrive='heroku apps --org thriveministry'
alias herokulunamisoo='heroku apps --org lunamisoo'
alias ha='heroku accounts'
alias haccountset='heroku accounts:set'
alias haddremote='heroku git:remote -a'
alias herokuelixir='heroku create --buildpack "https://github.com/HashNuke/heroku-buildpack-elixir.git"'
alias herokuphoenix='heroku buildpacks:add https://github.com/gjaldon/heroku-buildpack-phoenix-static.git'
alias hc='heroku create'
alias hcheck='curl https://status.heroku.com/api/v3/current-status.json'
alias hconfig='heroku config'
alias hconfigset='heroku config:set'
alias hconnectdemo='heroku addons:create herokuconnect:demo'
alias hconnectstatus='heroku connect:status -a thriveministry'
alias hconsole='heroku run rails console'
alias hdbm='heroku run rake db:migrate'
alias hhobbypostgres='heroku addons:create heroku-postgresql:hobby-dev'
alias hlocal='heroku local'
alias hlogin='heroku login'
alias hlogs='heroku logs --t'
alias hlogspg='heroku logs --tail --ps postgres --app thriveministry'
alias hlogsredis='heroku logs -p heroku-redis -t'
alias hlogsworker='heroku logs --ps worker'
alias hmon='heroku maintenance:on'
alias hmoff='heroku maintenance:off'
alias hmoonthrive='heroku maintenance:on --app thriveministry-production'
alias hmoonhub='heroku maintenance:on --app thriveministry-hub-production'
alias hmonthriveministry='heroku maintenance:on --app thriveministry-hub-production && heroku maintenance:on --app thriveministry-production'
alias hmoffthrive='heroku maintenance:off --app thriveministry-production'
alias hmoffhub='heroku maintenance:off --app thriveministry-hub-production'
alias hmoffthriveministry='heroku maintenance:off --app thriveministry-hub-production && heroku maintenance:off --app thriveministry-production'
alias hmixectomigrate='heroku run mix ecto.migrate'
alias hopen='heroku open'
alias hproduction='git push production master'
alias hpush='git push heroku master'
alias hps='heroku ps'
alias hredis='heroku redis:info'
alias hstaging='git push staging master'
alias productionhmon='heroku maintenance:on --app'
alias productionhmoff='heroku maintenance:off --app'

# GIT
# git filter-branch --tree-filter 'rm -rf path/to/your/file' HEAD
alias mastertomain='git branch -m master main'
alias ghrepo='gh repo view --web'

# NPM
alias npmis='npm install --save'
alias npmisd='npm install --save-dev'
alias npmi="npm init"
alias outdated='npm outdated'
alias list='npm list'
alias ncucheck='npx ncu'
alias ncunew='npx ncu -u'

# NEXTJS
alias next='npx next'
alias createnextapp='npx create-next-app'
alias updatenext='npm i next@latest react@latest react-dom@latest eslint-config-next@latest'

# Jupyter
alias jnotebook='jupyter notebook'


# Python
alias p3='python3'
# -- Django
alias djangocreate="django-admin startproject"

# Rails
alias cdeploy='cap production deploy'
alias cconsole='cap production rails:console'

alias bi='bundle install'
alias binstallrspec='bin/rails generate rspec:install'
alias biwp='bundle install --without production'
alias brspec='bundle binstubs rspec-core'
alias be='bundle exec'
alias bu='bundle update'
alias checkgems='bundle-audit update'
alias installrspec='rails generate rspec:install'
alias rakecompile='RAILS_ENV=production bundle exec rake assets:precompile'
alias rakeclean='rake assets:clean'
alias rakehardclean='rake assets:clobber'
alias rcompile='RAILS_ENV=production bundle exec rake assets:precompile'
alias rreset='rails db:migrate:reset'

alias rmigrate='rails db:migrate'
alias rmigratetest='rails db:migrate RAILS_ENV=test'
alias migrate='rails db:migrate'
alias migratetest='rails db:migrate RAILS_ENV=test'

alias rzero='rails db:migrate VERSION=0'

alias rstatus='rails db:migrate:status'
alias status='rails db:migrate:status'
alias rst='rails db:migrate:status'

alias rrollback='rails db:rollback'
alias rollback='rails db:rollback'

alias rr='rails routes'
alias routes='rails routes'
alias rconsole='rails console --sandbox'
alias rd='rails destroy'
alias rdc='rails destroy controller'
alias rdm='rails destroy migration'
alias rds='rails destroy scaffold'
alias rg='rails generate'
alias rgc='rails generate controller'
alias rgm='rails generate migration'
alias rgs='rails generate scaffold'
alias rgrc="rails generate react:component"
alias rn='rails new'
alias rs='rails s'
alias sidekiq='bundle exec sidekiq'
alias taillogs='tail -f log/development.log'
alias taillogssalesforce='tail -f log/restforce.log'

# React
alias cra="create-react-app"
alias createreact="create-react-app"

# React Native
alias rnativeios="react-native run-ios"
alias rnative="react-native"
alias createreactnative="create-react-native-app"
alias createexpo='npx create-expo-app'

# Redis
alias redis='redis-cli'
alias rediss='redis-server'

# Salesforce DX
code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ; }
alias sf="sfdx"
alias sfcreateproject="sfdx force:project:create -n"

# Tmux Session Start
alias tmx="tmux new -s"
alias tmxc="vim ~/.tmux.conf"
alias tmxa="tmux attach"
alias tmxk='tmux kill-session -t'
alias tmxl="tmux ls"

# Tmuxinator
alias tmxn='tmuxinator new'
alias tmxo='tmuxinator open'
alias tmxs='tmuxinator start'
alias tmxthrive='tmuxinator start Thrive'

# Vercel
alias vlist='vercel list'
alias vlogin='vercel login'
alias vprojects='vercel project'
alias vpull='vercel pull'
alias vwho='vercel whoami'

# Exports
export ZSH=$HOME/.oh-my-zsh
export PATH="/usr/local/bin:$PATH"

export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=$HOME/.go

export PATH="/usr/local/opt/qt@5.5/bin:$PATH"
export PATH="$(brew --prefix)/bin:$PATH"
export PATH="$HOME/.rbenv/bin:$PATH"

export PATH="/usr/local/opt/python/libexec/bin:$PATH"

export PATH="$PATH:$HOME/.config/yarn/global/node_modules/.bin"
export PATH="$HOME/.npm-packages/bin:$PATH"
export PATH=~/.npm-global/bin:$PATH

# export YENV_ROOT=/usr/local/opt/pyenv

export FORMAT="ID\t{{.ID}}\nNAME\t{{.Names}}\nIMAGE\t{{.Image}}\nPORTS\t{{.Ports}}\nCOMMAND\t{{.Command}}\nCREATED\t{{.CreatedAt}}\nSTATUS\t{{.Status}}\n"

eval "$(rbenv init -)"
# eval "$(pyenv init -)"

source $ZSH/oh-my-zsh.sh
# source /Users/anthonylee/Sites/dotfiles/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh


# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh
# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh
[ -f "/Users/anthonylee/.shopify-app-cli/shopify.sh" ] && source "/Users/anthonylee/.shopify-app-cli/shopify.sh"


# Flutter
export PATH="$PATH:`pwd`/flutter/bin"
export PATH="$PATH:/Users/anthonylee/Development/flutter/bin"
export NVM_DIR="/Users/anthonylee/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
source /Users/anthonylee/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
plugins=(
    # other plugins...
    zsh-autosuggestions
)

PATH="/Users/anthonylee/.local/share/solana/install/active_release/bin:$PATH"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/anthonylee/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/anthonylee/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/anthonylee/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/anthonylee/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

alias cursor='Open -a "Cursor"'

# Python aliases
alias python=python3
alias pip=pip3
